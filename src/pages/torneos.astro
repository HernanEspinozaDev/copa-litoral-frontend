---
import PublicLayout from '../layouts/PublicLayout.astro';

const title = 'Torneos Copa Litoral';
const description = 'Todos los torneos de Copa Litoral con inscripciones, bases, resultados y brackets de tenis';

// Fetch all tournament data
const response = await fetch(`${Astro.url.origin}/api/tournaments-data`);
const { data: allTournaments } = await response.json();

// Group tournaments by year
const torneosPorAnio = allTournaments.reduce((acc, torneo) => {
  const anio = torneo.anio;
  if (!acc[anio]) {
    acc[anio] = [];
  }
  acc[anio].push(torneo);
  return acc;
}, {});

const years = Object.keys(torneosPorAnio).sort((a, b) => b - a);

const statusMap = {
  proximamente: { text: 'Próximamente', class: 'bg-yellow-100 text-yellow-800' },
  'inscripciones-abiertas': { text: 'Inscripciones Abiertas', class: 'bg-green-100 text-green-800' },
  'en-juego': { text: 'En Juego', class: 'bg-blue-100 text-blue-800' },
  finalizado: { text: 'Finalizado', class: 'bg-slate-100 text-slate-800' },
};
---

<PublicLayout title={title} description={description}>
  <!-- Hero Section -->
  <section class="relative py-20 bg-gradient-to-br from-blue-900 via-blue-800 to-orange-600">
    <div class="max-w-7xl mx-auto px-4 text-center">
      <h1 class="text-4xl md:text-5xl font-bold text-white mb-4">Torneos Copa Litoral</h1>
      <p class="text-xl text-white/90 max-w-2xl mx-auto">
        Todos los torneos organizados por Copa Litoral con inscripciones, bases, resultados y brackets
      </p>
    </div>
  </section>

  <!-- Year Navigation -->
  <section class="py-8 bg-slate-100">
    <div class="max-w-7xl mx-auto px-4">
      <div class="flex flex-wrap gap-2" id="year-nav">
        {years.map((year, index) => (
          <button 
            class={`year-btn px-4 py-2 rounded-lg font-medium ${index === 0 ? 'bg-blue-600 text-white' : 'bg-slate-300 text-slate-700'}`}
            data-year={year}
          >
            {year}
          </button>
        ))}
      </div>
    </div>
  </section>

  <!-- Tournaments List -->
  <section class="py-16">
    <div class="max-w-7xl mx-auto px-4">
      {years.map((year, index) => (
        <div id={`tournaments-${year}`} class={`year-tournaments space-y-6 ${index > 0 ? 'hidden' : ''}`}>
          {torneosPorAnio[year].map(torneo => {
            const statusInfo = statusMap[torneo.estado] || statusMap.finalizado;
            return (
            <details class="bg-white rounded-xl shadow-lg overflow-hidden group">
              <summary class="bg-gradient-to-r from-blue-600 to-orange-600 p-6 cursor-pointer list-none flex items-center justify-between">
                <div>
                  <h2 class="text-2xl font-bold text-white">{torneo.titulo}</h2>
                  <p class="text-white/80">{torneo.lugar} • {torneo.fechas}</p>
                </div>
                <div class="flex items-center space-x-4">
                  <span class={`px-4 py-2 rounded-full text-sm font-medium ${statusInfo.class}`}>
                    {statusInfo.text}
                  </span>
                  <svg class="w-5 h-5 text-white transition-transform group-open:rotate-180" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M19 9l-7 7-7-7" />
                  </svg>
                </div>
              </summary>

              <div class="p-6">
                <div class="grid md:grid-cols-2 gap-8 mb-6">
                  <div>
                    <h3 class="text-lg font-semibold mb-4 text-slate-900">Resumen de Bases</h3>
                    <div class="space-y-4">
                      <div>
                        <h4 class="font-medium text-slate-900 mb-2 flex items-center">Categorías</h4>
                        <div class="flex flex-wrap gap-2">
                          {torneo.categorias.map(categoria => (
                            <span class="px-3 py-1 bg-blue-100 text-blue-800 rounded-full text-sm font-medium">
                              {categoria}
                            </span>
                          ))}
                        </div>
                      </div>
                      <div>
                        <h4 class="font-medium text-slate-900 mb-2 flex items-center">Formato</h4>
                        <p class="text-slate-600">{torneo.formato}</p>
                      </div>
                      <div>
                        <h4 class="font-medium text-slate-900 mb-2 flex items-center">Inscripción</h4>
                        <p class="text-slate-600 font-medium">{torneo.precio}</p>
                      </div>
                    </div>
                  </div>
                  <div class="bg-gradient-to-r from-blue-50 to-indigo-50 rounded-lg p-6 border border-blue-200">
                    <h3 class="font-bold text-lg text-slate-900 mb-4 flex items-center">Bases del Torneo</h3>
                    <div class="space-y-4">
                      <div class="bg-white rounded-lg p-4 shadow-sm">
                        <div class="text-slate-700 leading-relaxed whitespace-pre-wrap font-medium h-48 overflow-y-auto">{torneo.bases}</div>
                      </div>
                    </div>
                  </div>
                </div>

                <!-- Actions -->
                <div class="flex flex-wrap gap-4 mt-6 pt-6 border-t border-slate-200">
                  <a href={`/torneos/${torneo.id}/bases`} class="bg-blue-600 hover:bg-blue-700 text-white px-6 py-2 rounded-lg font-medium transition-colors inline-flex items-center">Ver Bases</a>
                  <a href={`/torneos/${torneo.id}/cuadros`} class="bg-green-600 hover:bg-green-700 text-white px-6 py-2 rounded-lg font-medium transition-colors inline-flex items-center">Ver Resultados</a>
                </div>
              </div>
            </details>
            )
          })}
        </div>
      ))}
    </div>
  </section>

  <script>
    document.addEventListener('DOMContentLoaded', () => {
      const yearNav = document.getElementById('year-nav');
      if (!yearNav) return;

      yearNav.addEventListener('click', (e) => {
        if (e.target.classList.contains('year-btn')) {
          const selectedYear = e.target.dataset.year;

          // Update button styles
          yearNav.querySelectorAll('.year-btn').forEach(btn => {
            btn.classList.remove('bg-blue-600', 'text-white');
            btn.classList.add('bg-slate-300', 'text-slate-700');
          });
          e.target.classList.add('bg-blue-600', 'text-white');
          e.target.classList.remove('bg-slate-300', 'text-slate-700');

          // Show/hide tournaments
          document.querySelectorAll('.year-tournaments').forEach(div => {
            if (div.id === `tournaments-${selectedYear}`) {
              div.classList.remove('hidden');
            } else {
              div.classList.add('hidden');
            }
          });
        }
      });
    });
  </script>
</PublicLayout>