---
// src/pages/admin/torneos/editar/[id].astro
import AdminLayout from '@layouts/AdminLayout.astro';
import { getTournaments } from '@lib/database';

const { id } = Astro.params;
const tournaments = getTournaments();
const tournament = tournaments.find(t => t.id === id);

if (!tournament) {
  throw new Error('Torneo no encontrado');
}

// Convert categories array to comma-separated string for the input field
const categoriesString = tournament.categories.join(', ');
---

<AdminLayout>
  <slot name="title" slot="title">Editar Torneo - Copa Litoral</slot>
  <slot name="description" slot="description">Editar torneo existente</slot>
  
  <h1 class="text-3xl font-bold mb-6 text-primary">Editar Torneo</h1>
  
  <form id="tournamentForm" class="bg-white p-6 rounded-lg shadow-md max-w-2xl">
    <input type="hidden" id="id" name="id" value={id} />
    
    <div class="mb-4">
      <label for="name" class="block text-gray-700 font-bold mb-2">Nombre del Torneo</label>
      <input type="text" id="name" name="name" value={tournament.name} required class="w-full px-3 py-2 border rounded-lg focus:outline-none focus:ring-2 focus:ring-primary" />
    </div>
    
    <div class="mb-4">
      <label for="date" class="block text-gray-700 font-bold mb-2">Fecha</label>
      <input type="date" id="date" name="date" value={tournament.date} required class="w-full px-3 py-2 border rounded-lg focus:outline-none focus:ring-2 focus:ring-primary" />
    </div>
    
    <div class="mb-4">
      <label for="location" class="block text-gray-700 font-bold mb-2">Ubicación</label>
      <input type="text" id="location" name="location" value={tournament.location} required class="w-full px-3 py-2 border rounded-lg focus:outline-none focus:ring-2 focus:ring-primary" />
    </div>
    
    <div class="mb-4">
      <label for="description" class="block text-gray-700 font-bold mb-2">Descripción</label>
      <textarea id="description" name="description" rows="4" required class="w-full px-3 py-2 border rounded-lg focus:outline-none focus:ring-2 focus:ring-primary">{tournament.description}</textarea>
    </div>
    
    <div class="mb-4">
      <label for="categories" class="block text-gray-700 font-bold mb-2">Categorías (separadas por coma)</label>
      <input type="text" id="categories" name="categories" value={categoriesString} placeholder="1ª categoría, 2ª categoría, Sub-16" required class="w-full px-3 py-2 border rounded-lg focus:outline-none focus:ring-2 focus:ring-primary" />
    </div>
    
    <div class="mb-4">
      <label for="image" class="block text-gray-700 font-bold mb-2">Imagen</label>
      <input type="file" id="image" name="image" accept="image/*" class="w-full px-3 py-2 border rounded-lg focus:outline-none focus:ring-2 focus:ring-primary" />
      <img src={tournament.imageUrl} alt="Imagen actual del torneo" class="mt-2 max-w-xs" />
    </div>
    
    <div class="flex space-x-4">
      <button type="submit" class="bg-primary hover:bg-orange-600 text-white font-bold py-2 px-4 rounded-lg transition duration-300">
        Guardar Cambios
      </button>
      <a href="/admin/torneos" class="bg-gray-500 hover:bg-gray-600 text-white font-bold py-2 px-4 rounded-lg transition duration-300">
        Cancelar
      </a>
    </div>
  </form>
  
  <script>
    document.getElementById('tournamentForm').addEventListener('submit', async (e) => {
      e.preventDefault();
      
      const formData = new FormData(e.target);
      const categories = formData.get('categories').split(',').map(cat => cat.trim());
      const id = formData.get('id');
      
      // For image upload, we would need to handle this separately
      // For now, we'll keep the existing image
      const data = {
        id: id,
        name: formData.get('name'),
        date: formData.get('date'),
        location: formData.get('location'),
        description: formData.get('description'),
        categories: categories,
        imageUrl: document.querySelector('#tournamentForm img').src
      };
      
      try {
        const response = await fetch(`/api/torneos/update/${id}`, {
          method: 'PUT',
          headers: {
            'Content-Type': 'application/json'
          },
          body: JSON.stringify(data)
        });
        
        if (response.ok) {
          alert('Torneo actualizado correctamente');
          window.location.href = '/admin/torneos';
        } else {
          alert('Error al actualizar el torneo');
        }
      } catch (error) {
        alert('Error de conexión: ' + error.message);
      }
    });
  </script>
</AdminLayout>
